import org.gradle.internal.os.OperatingSystem

plugins {
  id "java"
  id "application"
}

group = "me.whizvox"
version = "1.0-SNAPSHOT"

project.ext.lwjglVersion = "3.3.3"
project.ext.jomlVersion = "1.10.5"

switch (OperatingSystem.current()) {
  case OperatingSystem.LINUX:
    project.ext.lwjglNatives = "natives-linux"
    def osArch = System.getProperty("os.arch")
    if (osArch.startsWith("arm") || osArch.startsWith("aarch64")) {
      project.ext.lwjglNatives += osArch.contains("64") || osArch.startsWith("armv8") ? "-arm64" : "-arm32"
    } else if  (osArch.startsWith("ppc")) {
      project.ext.lwjglNatives += "-ppc64le"
    } else if  (osArch.startsWith("riscv")) {
      project.ext.lwjglNatives += "-riscv64"
    }
    break
  case OperatingSystem.MAC_OS:
    project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
    break
  case OperatingSystem.WINDOWS:
    def osArch = System.getProperty("os.arch")
    project.ext.lwjglNatives = osArch.contains("64")
        ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
        : "natives-windows-x86"
    break
}

repositories {
  mavenCentral()
}

dependencies {
  implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

  implementation "org.lwjgl:lwjgl"
  implementation "org.lwjgl:lwjgl-glfw"
  implementation "org.lwjgl:lwjgl-openal"
  implementation "org.lwjgl:lwjgl-opengl"
  implementation "org.lwjgl:lwjgl-stb"
  runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
  implementation "org.joml:joml:$jomlVersion"
}

application {
  mainClass = "me.whizvox.gameoflife.GameOfLife"
}
